% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_plsr.r
\name{calc_pls_args}
\alias{calc_pls_args}
\title{Calculate PLSR - Arguments}
\arguments{
\item{do.pls}{Logical. If used in \code{getap}, if PLSR models should be 
calculated with a given dataset.}

\item{pls.regOn}{NULL or character vector. Which variables should be used 
to regress on. Set to NULL for using all numerical variables to regress on, or 
provide a character vector with the column names of numerical variables to use 
those for regression in the PLSR.}

\item{pls.ncomp}{NULL or integer length one. The number of components used in 
PLSR. Set to NULL for automatic detection, or provide an integer to use this 
number of components in the PLSR.}

\item{pls.valid}{Character. Which crossvalidation to use. Possible values are:
\itemize{
  \item "def" Read in the default value from settings.r (parameter 
  \code{plsr_calc_typeOfCrossvalid})
  \item A numeric length one for this n-fold crossvalidation. The default is 
  to always exclude resp. include consecutive scans together.
  \item A valid name of a class variable for performing a crossvalidation 
  based on the grouping defined by this variable. For a class variable 
  containing e.g. four different levels, a 4-fold crossvalidation with always 
  all members of one group being excluded is performed.
  This is overruling any grouping that would result from the consecutive 
  scans, please see below.
  \item "LOO" for a leave-one-out crossvalidation
}
If a vector with the same length as the vector in \code{pls.regOn} is 
provided, each element of \code{pls.valid} is used for crossvalidating the 
corresponding element in \code{pls.regOn}. Any of the above mentioned input 
types can be mixed, so the input could be e.g. 
\code{pls.valid <- c("C_FooBar", 10, "C_BarFoo", 10)}. The corresponding 
\code{pls.regOn} input for this would then be e.g. 
\code{pls.regOn <- c("Y_FooBar", "Y_FooBar", "Y_BarFoo", "Y_BarFoo")}.
Please note that via the parameter \code{plsr_calc_CV_consecsTogether} in 
the settings file you can select if for crossvalidation the 
\strong{consecutive scans} (i.e. the scans with the same sample number) should 
always be excluded or included together. The default is to always exclude resp. 
include the consecutive scans of a single sample together.}

\item{pls.exOut}{Logical. If a plsr-specific box-plot based outlier-detection 
algorithm should be used on the data of a first plsr model to determine the 
outliers that then will be excluded in the final plsr model. Possible values 
are:
\itemize{
\item "def" Read in the default value from settings.r (parameter 
\code{plsr_calc_excludePlsrOutliers})
\item TRUE for excluding plsr specific outliers
\item FALSE for not performing the plsr specific outlier exclusion
}
If a vector with the same length as the vector in \code{pls.regOn} is 
provided, each element of \code{pls.exOut} is used to perform the
corresponding outlier-detection (or not) for each element in 
\code{pls.regOn}.}
}
\description{
The following parameters can be used in the \code{...} argument in 
function \code{\link{getap}}, also within function \code{\link{gdmm}}, to 
override the values in the analysis procedure file and so to modify the 
calculation of PLSR models - see examples.
\describe{
\item{\code{getap(...)}}{ }
\item{\code{gdmm(dataset, ap=getap(...))}}{ }
}
}
\details{
For a list of all parameters that can be used in the \code{...} 
argument in \code{\link{getap}} and in the \code{\link{plot}} functions 
please see \code{\link{anproc_file}}.
}
\section{Note}{
 Calculation of PLSR models is done with the function  
\code{\link[pls]{plsr}}.
}

\examples{
\dontrun{
 dataset <- gfd()
 cube <- gdmm(dataset, ap=getap(pls.regOn="Y_Temp"))
 cube <- gdmm(dataset, ap=getap(pls.ncomp=5, pls.regOn="Y_Foo"))
}
}
\seealso{
\code{\link{gdmm}}

Other Calc. arguments: 
\code{\link{calc_NNET_args}},
\code{\link{calc_SVM_args}},
\code{\link{calc_aqg_args}},
\code{\link{calc_discrimAnalysis_args}},
\code{\link{calc_pca_args}},
\code{\link{calc_randomForest_args}},
\code{\link{calc_sim_args}},
\code{\link{split_dataset}}

Other PLSR documentation: 
\code{\link{plot_pls,aquap_cube-method}},
\code{\link{plot_pls_args}},
\code{\link{plot_pls_indepPred}()}
}
\concept{Calc. arguments}
\concept{PLSR documentation}
