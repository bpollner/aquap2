% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cube_generateDatasets.r
\name{split_dataset}
\alias{split_dataset}
\title{Split Dataset}
\arguments{
\item{spl.var}{NULL or character vector. If NULL, no splitting of the 
dataset will be performed. Provide a character vector with the column names 
of class variables to split the dataset along these variables.}

\item{spl.wl}{NULL or character vector. If NULL, all in the dataset 
available wavelengths will be used. Provide a character vector in the format 
"wlFrom-to-wlTo" (e.g. c("1000-to-2000", "1300-to-1600", ...)) 
to use all previously defined splits in these wavelengths.}

\item{dpt.pre}{Character vector, which of the available modules of data 
pre-treatments to apply \strong{AFTER} a (possible) split by variable 
\code{spl.var} and wavelength \code{spl.w.}, and \strong{BEFORE} a (possible) 
splitting of the dataset according to the provided split-variables below 
(csAvg, noise, exOut). Leave at NULL for no data pre-treatment. Possible values 
are 'sgol', 'snv', 'msc', 'emsc', 'osc', 'deTr', 'gsd'. Add additional parameters to \emph{some} of 
the single strings via the separator '@'. For further information and examples 
see \code{\link{dpt_modules}}.}

\item{spl.do.csAvg}{Logical. If all the consecutive scans of a single sample 
should be reduced, i.e. averaged into a single spectrum.}

\item{spl.csAvg.raw}{Logical. If, should the consecutive scans of a single 
sample be reduced, an other dataset containing every single consecutive scan 
should be kept as well as well.}

\item{spl.do.noise}{Logical. If artifical noise should be added to the dataset.}

\item{spl.noise.raw}{If, should the noise-test be performed, the raw data 
will be used as well in addition to the noise-data.}

\item{spl.do.exOut}{Logical. If exclusion of outliers should be performed.}

\item{spl.exOut.raw}{Logical. If, should exclusion of outliers be performed, 
the raw original data should be used as well. If set to TRUE, outliers will 
be flagged in the dataset in any case.}

\item{spl.exOut.var}{Character vector. The variables that should be used 
for the grouping defining the scope for outlier detection. The name of the 
resulting column consists of the class variable prefix (as defined in the 
settings.r file in \code{p_ClassVarPref}), the general designator for an 
outlier-column (as defined in the settings.r file in \code{p_outlierCol}) 
followed by an underscore '\code{_}', and each of the provided variables 
(without the class variable prefix) separated by a '.' dot. For example, if the 
provided variables are \code{C_Group} and \code{C_Time}, the column containing 
the outlier-flags might be called \code{C_outlier_Group.Time}.}

\item{dpt.post}{Character vector, which of the available modules of data 
pre-treatments to apply \strong{AFTER} (possibly) splitting the dataset. Leave 
at NULL for no additional data treatment. Possible values are 
'sgol', 'snv', 'msc', 'emsc', 'osc', 'deTr', 'gsd'. Add additional parameters to \emph{some} of the 
single strings via the separator '@'. For examples and further information 
see \code{\link{dpt_modules}}.}
}
\description{
The following parameters can be used in the \code{...} argument in 
function \code{\link{getap}}, also within function \code{\link{gdmm}}, to 
override the values in the analysis procedure file and so to modify the 
split-dataset process - see examples.

\code{getap(...)}

\code{gdmm(dataset, ap=getap(...))}
}
\details{
For a list of all parameters that can be used in the \code{...} 
argument in \code{\link{getap}} and in the \code{\link{plot}} functions 
please see \code{\link{anproc_file}}.
}
\examples{
\dontrun{
dataset <- gfd() # will load or import data
cube <- gdmm(dataset, getap(spl.var="C_Group")) # split the dataset by "C_Group"
cube <- gdmm(dataset, getap(spl.var=c("C_Group", "C_Temp"))) # split the dataset 
# by "C_Group", then by "C_Temp"
cube <- gdmm(dataset, getap(spl.wl="1300-to-1600")) # override 'spl.wl' in the 
# analysis procedure 
}
}
\seealso{
\code{\link{dpt_modules}}

Other Calc. arguments: 
\code{\link{calc_NNET_args}},
\code{\link{calc_SVM_args}},
\code{\link{calc_aqg_args}},
\code{\link{calc_discrimAnalysis_args}},
\code{\link{calc_pca_args}},
\code{\link{calc_pls_args}},
\code{\link{calc_randomForest_args}},
\code{\link{calc_sim_args}}
}
\concept{Calc. arguments}
